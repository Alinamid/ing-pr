{"version":3,"file":"login-form.js","sourceRoot":"","sources":["../../src/login-form.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\r\nimport { property } from 'lit/decorators.js';\r\nimport '@lion/input/define';\r\nimport '@lion/button/define';\r\n\r\nexport class LoginForm extends LitElement {\r\n  static styles = css`\r\n    .login-container {\r\n      max-width: 400px;\r\n      margin: auto;\r\n      padding: 1rem;\r\n      border: 1px solid #ddd;\r\n      border-radius: 8px;\r\n      background: #fff;\r\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    }\r\n    .form-group {\r\n      margin-bottom: 1rem;\r\n    }\r\n    .error {\r\n      color: red;\r\n      font-size: 0.875rem;\r\n    }\r\n  `;\r\n\r\n  @property({ type: String }) username = '';\r\n  @property({ type: String }) password = '';\r\n  @property({ type: String }) passwordError = '';\r\n\r\n  private _validatePassword(value: string): boolean {\r\n    const minLength = 8;\r\n    const hasUppercase = /[A-Z]/.test(value);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\r\n    \r\n    if (value.length < minLength || !hasUppercase || !hasSpecialChar) {\r\n      this.passwordError = 'Password must be at least 8 characters long, include an uppercase letter, and a special character.';\r\n      return false;\r\n    }\r\n    this.passwordError = '';\r\n    return true;\r\n  }\r\n\r\n  private _handleInput(e: Event) {\r\n    const target = e.target as HTMLInputElement;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    if (name === 'username') {\r\n      this.username = value;\r\n    } else if (name === 'password') {\r\n      this.password = value;\r\n      this._validatePassword(value);\r\n    }\r\n  }\r\n\r\n  private _handleSubmit(e: Event) {\r\n    e.preventDefault();\r\n    // without server validation I will just display them in console\r\n    if (this._validatePassword(this.password)) {\r\n      console.log(`Your Username is: ${this.username}`);\r\n      console.log(`Your Password is: ${this.password}`);\r\n\r\n      const main = document.querySelector('main');\r\n      if (main) {\r\n        main.innerHTML = '';\r\n        const welcomePage = document.createElement('welcome-page') as HTMLElement;\r\n        (welcomePage as any).username = this.username; \r\n        main.appendChild(welcomePage);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"login-container\">\r\n        <h2>Login</h2>\r\n        <form @submit=${this._handleSubmit}>\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <lion-input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              .value=${this.username}\r\n              @input=${this._handleInput}\r\n              required\r\n              placeholder=\"Enter your username\"\r\n            ></lion-input>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <lion-input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              .value=${this.password}\r\n              @input=${this._handleInput}\r\n              required\r\n              placeholder=\"Enter your password\"\r\n            ></lion-input>\r\n            ${this.passwordError ? html`<div class=\"error\">${this.passwordError}</div>` : ''}\r\n            </div>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('login-form', LoginForm);\r\n"]}